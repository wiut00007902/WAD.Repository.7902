// <auto-generated />
using System;
using ManagementApplication.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ManagementApplication.DAL.Migrations
{
    [DbContext(typeof(ManagementApplicationDbContext))]
    partial class ManagementApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ManagementApplication.DAL.DBO.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(1990, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentName = "Accounting department",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(1990, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentName = "IT department",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(1990, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentName = "Production department",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(1990, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentName = "Research and Development department",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(1995, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentName = "Architecture department",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(1995, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentName = "East Asian Studies department",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(1995, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentName = "Middle Eastern Studies department",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(1995, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentName = "French language department",
                            RegionId = 2
                        });
                });

            modelBuilder.Entity("ManagementApplication.DAL.DBO.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EmploymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Salary")
                        .HasColumnType("real");

                    b.Property<int>("Schedule")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Little Ring Avn, 13",
                            DateOfBirth = new DateTime(1960, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "john.smith@mail.ru",
                            EmploymentDate = new DateTime(2020, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            Gender = 0,
                            LastName = "Smith",
                            PassportNo = "AB7564737",
                            Phone = "+1-435-545-65-76",
                            Position = "Manager",
                            Salary = 12000f,
                            Schedule = 0
                        },
                        new
                        {
                            Id = 2,
                            Address = "Amir-Temur street, 24",
                            DateOfBirth = new DateTime(1967, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Email = "phillip.walsh@mail.ru",
                            EmploymentDate = new DateTime(2007, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Phillip",
                            Gender = 0,
                            LastName = "Walsh",
                            PassportNo = "AB5675434",
                            Phone = "+998-93-647-75-63",
                            Position = "Software engineer",
                            Salary = 7000f,
                            Schedule = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "Alisher Navoiy street, 46",
                            DateOfBirth = new DateTime(1983, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            Email = "dora.williamson@mail.ru",
                            EmploymentDate = new DateTime(2020, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dora",
                            Gender = 1,
                            LastName = "Williamson",
                            PassportNo = "AA7587492",
                            Phone = "+998-97-657-47-86",
                            Position = "Product designer",
                            Salary = 8000f,
                            Schedule = 4
                        },
                        new
                        {
                            Id = 4,
                            Address = "Mirabad street, 34",
                            DateOfBirth = new DateTime(1973, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            Email = "nadeem.liu@mail.ru",
                            EmploymentDate = new DateTime(2012, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nadeem",
                            Gender = 1,
                            LastName = "Liu",
                            PassportNo = "AA8597573",
                            Phone = "+998-90-754-98-12",
                            Position = "Researcher",
                            Salary = 7500f,
                            Schedule = 3
                        });
                });

            modelBuilder.Entity("ManagementApplication.DAL.DBO.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegionName = "Uzbekistan"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegionName = "USA"
                        });
                });

            modelBuilder.Entity("ManagementApplication.DAL.DBO.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationTime = new DateTime(2020, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2021, 4, 18, 23, 11, 21, 699, DateTimeKind.Local).AddTicks(7529),
                            EmployeeId = 1,
                            TaskDescription = "John Smith should properly manage employees",
                            TaskName = "Manage employees"
                        },
                        new
                        {
                            Id = 2,
                            CreationTime = new DateTime(2020, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2021, 4, 18, 23, 11, 21, 701, DateTimeKind.Local).AddTicks(7315),
                            EmployeeId = 2,
                            TaskDescription = "Phillip Walsh should create software",
                            TaskName = "Create software"
                        },
                        new
                        {
                            Id = 3,
                            CreationTime = new DateTime(2020, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2021, 4, 18, 23, 11, 21, 701, DateTimeKind.Local).AddTicks(7348),
                            EmployeeId = 3,
                            TaskDescription = "Dora Williamson should create a great product design",
                            TaskName = "Create a product design"
                        },
                        new
                        {
                            Id = 4,
                            CreationTime = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2021, 4, 18, 23, 11, 21, 701, DateTimeKind.Local).AddTicks(7354),
                            EmployeeId = 4,
                            TaskDescription = "Nadeem Liu should make a research",
                            TaskName = "Manage employees"
                        });
                });

            modelBuilder.Entity("ManagementApplication.DAL.DBO.Department", b =>
                {
                    b.HasOne("ManagementApplication.DAL.DBO.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("ManagementApplication.DAL.DBO.Employee", b =>
                {
                    b.HasOne("ManagementApplication.DAL.DBO.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ManagementApplication.DAL.DBO.Task", b =>
                {
                    b.HasOne("ManagementApplication.DAL.DBO.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
